import React, { useEffect, useState } from 'react';
import styles from './BonusPanel.module.scss';

const BonusPanel = ({
  openCase,
  canOpenCase,
  getCaseCooldown,
  activateBooster,
  boosterActive,
  boosterCooldown,
}) => {

  const [cooldown, setCooldown] = useState(0);

  useEffect(() => {
    setCooldown(getCaseCooldown());

    const interval = setInterval(() => {
      setCooldown(getCaseCooldown());
    }, 1000);

    return () => clearInterval(interval);
  }, [getCaseCooldown]);

  const handleCaseOpen = () => {
    if (!canOpenCase()) {
      alert(`üïí –ö–µ–π—Å –º–æ–∂–Ω–∞ –±—É–¥–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${cooldown} —Å–µ–∫.`);
      return;
    }

    const reward = openCase();
    if (reward !== null) {
      alert(`üéÅ –í–∏ –≤—ñ–¥–∫—Ä–∏–ª–∏ –∫–µ–π—Å —ñ –æ—Ç—Ä–∏–º–∞–ª–∏ +${reward} –∫—Ä–µ–¥–∏—Ç—ñ–≤!`);
      setCooldown(getCaseCooldown());
    }
  };

  const handleBooster = () => {
    if (boosterCooldown > 0 || boosterActive) {
      alert(`üöÄ –ë—É—Å—Ç–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–π –∞–±–æ –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥—Ü—ñ. –ó–∞—á–µ–∫–∞–π—Ç–µ ${boosterCooldown} —Å–µ–∫.`);
      return;
    }
    activateBooster();
    alert('üöÄ –ê–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –±—É—Å—Ç–µ—Ä –Ω–∞ 30 —Å–µ–∫—É–Ω–¥!');
  };

  return (
    <div className={styles.panel}>
      <h2>–ë–æ–Ω—É—Å–∏</h2>
      <button onClick={handleCaseOpen} disabled={cooldown > 0}>
        {cooldown > 0 ? `–ó–∞—á–µ–∫–∞–π—Ç–µ ${cooldown}—Å` : '–í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–µ–π—Å'}
      </button>
      <button
        onClick={handleBooster}
        disabled={boosterActive || boosterCooldown > 0}
      >
        {boosterActive
          ? '–ë—É—Å—Ç–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–π!'
          : boosterCooldown > 0
          ? `–ë—É—Å—Ç–µ—Ä: ${boosterCooldown}—Å`
          : '–ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –±—É—Å—Ç–µ—Ä'}
      </button>
    </div>
  );
};

export default BonusPanel;
